// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TypeORM Test Suite should support convert cuid aspect: DRAFT_DraftAdministrativeData.CreatedByUser element definition 1`] = `
{
  "length": 256,
  "name": "CreatedByUser",
  "nullable": true,
  "type": "nvarchar",
}
`;

exports[`TypeORM Test Suite should support convert cuid aspect: DRAFT_DraftAdministrativeData.CreationDateTime element definition 1`] = `
{
  "name": "CreationDateTime",
  "nullable": true,
  "type": "timestamp",
}
`;

exports[`TypeORM Test Suite should support convert cuid aspect: DRAFT_DraftAdministrativeData.DraftIsCreatedByMe element definition 1`] = `
{
  "name": "DraftIsCreatedByMe",
  "nullable": true,
  "type": "boolean",
}
`;

exports[`TypeORM Test Suite should support convert cuid aspect: DRAFT_DraftAdministrativeData.DraftIsProcessedByMe element definition 1`] = `
{
  "name": "DraftIsProcessedByMe",
  "nullable": true,
  "type": "boolean",
}
`;

exports[`TypeORM Test Suite should support convert cuid aspect: DRAFT_DraftAdministrativeData.DraftUUID element definition 1`] = `
{
  "default": undefined,
  "length": 36,
  "name": "DraftUUID",
  "nullable": false,
  "primary": true,
  "type": "nvarchar",
}
`;

exports[`TypeORM Test Suite should support convert cuid aspect: DRAFT_DraftAdministrativeData.InProcessByUser element definition 1`] = `
{
  "length": 256,
  "name": "InProcessByUser",
  "nullable": true,
  "type": "nvarchar",
}
`;

exports[`TypeORM Test Suite should support convert cuid aspect: DRAFT_DraftAdministrativeData.LastChangeDateTime element definition 1`] = `
{
  "name": "LastChangeDateTime",
  "nullable": true,
  "type": "timestamp",
}
`;

exports[`TypeORM Test Suite should support convert cuid aspect: DRAFT_DraftAdministrativeData.LastChangedByUser element definition 1`] = `
{
  "length": 256,
  "name": "LastChangedByUser",
  "nullable": true,
  "type": "nvarchar",
}
`;

exports[`TypeORM Test Suite should support convert cuid aspect: FioriService_Persons_drafts.Address element definition 1`] = `
{
  "length": 255,
  "name": "Address",
  "nullable": true,
  "type": "nvarchar",
}
`;

exports[`TypeORM Test Suite should support convert cuid aspect: FioriService_Persons_drafts.Age element definition 1`] = `
{
  "default": 25,
  "name": "Age",
  "nullable": true,
  "type": "integer",
}
`;

exports[`TypeORM Test Suite should support convert cuid aspect: FioriService_Persons_drafts.DraftAdministrativeData_DraftUUID element definition 1`] = `
{
  "length": 36,
  "name": "DraftAdministrativeData_DraftUUID",
  "nullable": true,
  "type": "nvarchar",
}
`;

exports[`TypeORM Test Suite should support convert cuid aspect: FioriService_Persons_drafts.HasActiveEntity element definition 1`] = `
{
  "default": false,
  "name": "HasActiveEntity",
  "nullable": false,
  "type": "boolean",
}
`;

exports[`TypeORM Test Suite should support convert cuid aspect: FioriService_Persons_drafts.HasDraftEntity element definition 1`] = `
{
  "default": false,
  "name": "HasDraftEntity",
  "nullable": false,
  "type": "boolean",
}
`;

exports[`TypeORM Test Suite should support convert cuid aspect: FioriService_Persons_drafts.ID element definition 1`] = `
{
  "default": undefined,
  "length": 36,
  "name": "ID",
  "nullable": false,
  "primary": true,
  "type": "nvarchar",
}
`;

exports[`TypeORM Test Suite should support convert cuid aspect: FioriService_Persons_drafts.IsActiveEntity element definition 1`] = `
{
  "default": true,
  "name": "IsActiveEntity",
  "nullable": true,
  "type": "boolean",
}
`;

exports[`TypeORM Test Suite should support convert cuid aspect: FioriService_Persons_drafts.Name element definition 1`] = `
{
  "length": 255,
  "name": "Name",
  "nullable": true,
  "type": "nvarchar",
}
`;

exports[`TypeORM Test Suite should support convert cuid aspect: test_resources_fiori_db_Person.Address element definition 1`] = `
{
  "length": 255,
  "name": "Address",
  "nullable": true,
  "type": "nvarchar",
}
`;

exports[`TypeORM Test Suite should support convert cuid aspect: test_resources_fiori_db_Person.Age element definition 1`] = `
{
  "default": 25,
  "name": "Age",
  "nullable": true,
  "type": "integer",
}
`;

exports[`TypeORM Test Suite should support convert cuid aspect: test_resources_fiori_db_Person.ID element definition 1`] = `
{
  "default": undefined,
  "length": 36,
  "name": "ID",
  "nullable": false,
  "primary": true,
  "type": "nvarchar",
}
`;

exports[`TypeORM Test Suite should support convert cuid aspect: test_resources_fiori_db_Person.Name element definition 1`] = `
{
  "length": 255,
  "name": "Name",
  "nullable": true,
  "type": "nvarchar",
}
`;

exports[`TypeORM Test Suite should support convert different prop type to EntitySchema: test_property_type_People.Active element definition 1`] = `
{
  "default": true,
  "name": "Active",
  "nullable": true,
  "type": "boolean",
}
`;

exports[`TypeORM Test Suite should support convert different prop type to EntitySchema: test_property_type_People.Age element definition 1`] = `
{
  "default": 10,
  "name": "Age",
  "nullable": true,
  "type": "integer",
}
`;

exports[`TypeORM Test Suite should support convert different prop type to EntitySchema: test_property_type_People.Avatar element definition 1`] = `
{
  "length": 255,
  "name": "Avatar",
  "nullable": true,
  "type": "varbinary",
}
`;

exports[`TypeORM Test Suite should support convert different prop type to EntitySchema: test_property_type_People.BirthDateTime element definition 1`] = `
{
  "name": "BirthDateTime",
  "nullable": true,
  "type": "timestamp",
}
`;

exports[`TypeORM Test Suite should support convert different prop type to EntitySchema: test_property_type_People.BirthDay element definition 1`] = `
{
  "name": "BirthDay",
  "nullable": false,
  "type": "date",
}
`;

exports[`TypeORM Test Suite should support convert different prop type to EntitySchema: test_property_type_People.Create element definition 1`] = `
{
  "default": false,
  "name": "Create",
  "nullable": true,
  "type": "boolean",
}
`;

exports[`TypeORM Test Suite should support convert different prop type to EntitySchema: test_property_type_People.Credit element definition 1`] = `
{
  "default": 1,
  "name": "Credit",
  "nullable": true,
  "precision": 10,
  "scale": 2,
  "type": "decimal",
}
`;

exports[`TypeORM Test Suite should support convert different prop type to EntitySchema: test_property_type_People.DoubleProperty element definition 1`] = `
{
  "name": "DoubleProperty",
  "nullable": true,
  "type": "double",
}
`;

exports[`TypeORM Test Suite should support convert different prop type to EntitySchema: test_property_type_People.FullEmployee element definition 1`] = `
{
  "default": false,
  "name": "FullEmployee",
  "nullable": true,
  "type": "boolean",
}
`;

exports[`TypeORM Test Suite should support convert different prop type to EntitySchema: test_property_type_People.Int16Property element definition 1`] = `
{
  "name": "Int16Property",
  "nullable": true,
  "type": "smallint",
}
`;

exports[`TypeORM Test Suite should support convert different prop type to EntitySchema: test_property_type_People.Int32Property element definition 1`] = `
{
  "name": "Int32Property",
  "nullable": true,
  "type": "integer",
}
`;

exports[`TypeORM Test Suite should support convert different prop type to EntitySchema: test_property_type_People.Int64Property element definition 1`] = `
{
  "name": "Int64Property",
  "nullable": true,
  "type": "bigint",
}
`;

exports[`TypeORM Test Suite should support convert different prop type to EntitySchema: test_property_type_People.Integer64Property element definition 1`] = `
{
  "name": "Integer64Property",
  "nullable": true,
  "type": "bigint",
}
`;

exports[`TypeORM Test Suite should support convert different prop type to EntitySchema: test_property_type_People.Key element definition 1`] = `
{
  "name": "Key",
  "nullable": false,
  "type": "integer",
}
`;

exports[`TypeORM Test Suite should support convert different prop type to EntitySchema: test_property_type_People.LargeBinaryValue element definition 1`] = `
{
  "name": "LargeBinaryValue",
  "nullable": true,
  "type": "longblob",
}
`;

exports[`TypeORM Test Suite should support convert different prop type to EntitySchema: test_property_type_People.Name element definition 1`] = `
{
  "default": undefined,
  "length": 20,
  "name": "Name",
  "nullable": false,
  "primary": true,
  "type": "nvarchar",
}
`;

exports[`TypeORM Test Suite should support convert different prop type to EntitySchema: test_property_type_People.Picture element definition 1`] = `
{
  "name": "Picture",
  "nullable": true,
  "type": "longtext",
}
`;

exports[`TypeORM Test Suite should support convert different prop type to EntitySchema: test_property_type_People.StringWithoutLength element definition 1`] = `
{
  "length": undefined,
  "name": "StringWithoutLength",
  "nullable": true,
  "type": "text",
}
`;

exports[`TypeORM Test Suite should support convert different prop type to EntitySchema: test_property_type_People.Type element definition 1`] = `
{
  "default": undefined,
  "length": 10,
  "name": "Type",
  "nullable": false,
  "primary": true,
  "type": "nvarchar",
}
`;

exports[`TypeORM Test Suite should support convert different prop type to EntitySchema: test_property_type_People.UInt8Property element definition 1`] = `
{
  "name": "UInt8Property",
  "nullable": true,
  "type": "tinyint",
}
`;

exports[`TypeORM Test Suite should support convert different prop type to EntitySchema: test_property_type_People.rank element definition 1`] = `
{
  "name": "rank",
  "nullable": true,
  "type": "longtext",
}
`;

exports[`TypeORM Test Suite should support migrate different prop type to mysql 1`] = `
[
  {
    "parameters": undefined,
    "query": "CREATE TABLE \`test_property_type_People\` (\`Name\` varchar(20) NOT NULL, \`Age\` int NULL DEFAULT '10', \`Credit\` decimal(10,2) NULL DEFAULT '1.00', \`FullEmployee\` tinyint NULL DEFAULT 0, \`Active\` tinyint NULL DEFAULT 1, \`BirthDay\` date NOT NULL, \`BirthDateTime\` timestamp NULL, \`Type\` varchar(10) NOT NULL, \`Avatar\` varbinary(255) NULL, \`Picture\` longtext NULL, \`rank\` longtext NULL, \`UInt8Property\` tinyint NULL, \`Int16Property\` smallint NULL, \`Int32Property\` int NULL, \`Int64Property\` bigint NULL, \`Integer64Property\` bigint NULL, \`Create\` tinyint NULL DEFAULT 0, \`Key\` int NOT NULL, \`DoubleProperty\` double NULL, \`StringWithoutLength\` text NULL, \`LargeBinaryValue\` longblob NULL, PRIMARY KEY (\`Name\`, \`Type\`)) ENGINE=InnoDB CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_unicode_ci'",
  },
  {
    "parameters": undefined,
    "query": "CREATE TABLE \`cds_mysql_csv_history\` (\`id\` int NOT NULL AUTO_INCREMENT COMMENT 'dummy id', \`entity\` varchar(500) NOT NULL COMMENT 'entity name', \`hash\` varchar(64) NOT NULL COMMENT 'sha256 hash', PRIMARY KEY (\`id\`)) ENGINE=InnoDB CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_unicode_ci'",
  },
]
`;

exports[`TypeORM Test Suite should support migrate tables 1`] = `
[
  [
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {
          "ID": {
            "default": undefined,
            "length": 36,
            "name": "ID",
            "nullable": false,
            "primary": true,
            "type": "nvarchar",
          },
          "Name": {
            "length": 100,
            "name": "Name",
            "nullable": true,
            "type": "nvarchar",
          },
        },
        "deps": [],
        "name": "test_resources_migrate_People",
        "synchronize": true,
        "tableName": "test_resources_migrate_People",
      },
    },
  ],
  [
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {
          "Age": {
            "name": "Age",
            "nullable": true,
            "type": "integer",
          },
          "ID": {
            "default": undefined,
            "length": 36,
            "name": "ID",
            "nullable": false,
            "primary": true,
            "type": "nvarchar",
          },
          "Name": {
            "default": undefined,
            "length": 100,
            "name": "Name",
            "nullable": false,
            "primary": true,
            "type": "nvarchar",
          },
        },
        "deps": [],
        "name": "test_resources_migrate_People",
        "synchronize": true,
        "tableName": "test_resources_migrate_People",
      },
    },
  ],
  [
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {
          "Active": {
            "default": false,
            "name": "Active",
            "nullable": true,
            "type": "boolean",
          },
          "Age": {
            "name": "Age",
            "nullable": true,
            "type": "integer",
          },
          "ID": {
            "default": undefined,
            "length": 36,
            "name": "ID",
            "nullable": false,
            "primary": true,
            "type": "nvarchar",
          },
          "Name": {
            "default": undefined,
            "length": 100,
            "name": "Name",
            "nullable": false,
            "primary": true,
            "type": "nvarchar",
          },
        },
        "deps": [],
        "name": "test_resources_migrate_People",
        "synchronize": true,
        "tableName": "test_resources_migrate_People",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {},
        "deps": [
          "test_resources_migrate_People",
        ],
        "expression": "SELECT
  People_0.ID,
  People_0.Name,
  People_0.Age,
  People_0.Active
FROM test_resources_migrate_People AS People_0
WHERE People_0.Active = TRUE;",
        "name": "test_resources_migrate_ActivePeople",
        "synchronize": true,
        "tableName": "test_resources_migrate_ActivePeople",
        "type": "view",
      },
    },
  ],
  [
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {
          "Active": {
            "default": false,
            "name": "Active",
            "nullable": true,
            "type": "boolean",
          },
          "Age": {
            "name": "Age",
            "nullable": true,
            "type": "integer",
          },
          "ID": {
            "default": undefined,
            "length": 36,
            "name": "ID",
            "nullable": false,
            "primary": true,
            "type": "nvarchar",
          },
          "Name": {
            "default": undefined,
            "length": 100,
            "name": "Name",
            "nullable": false,
            "primary": true,
            "type": "nvarchar",
          },
        },
        "deps": [],
        "name": "test_resources_migrate_People",
        "synchronize": true,
        "tableName": "test_resources_migrate_People",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {},
        "deps": [
          "test_resources_migrate_People",
        ],
        "expression": "SELECT
  People_0.Name
FROM test_resources_migrate_People AS People_0
WHERE People_0.Active = FALSE;",
        "name": "test_resources_migrate_InActivePeople",
        "synchronize": true,
        "tableName": "test_resources_migrate_InActivePeople",
        "type": "view",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {},
        "deps": [
          "test_resources_migrate_People",
        ],
        "expression": "SELECT
  People_0.Name
FROM test_resources_migrate_People AS People_0
WHERE People_0.Active = TRUE;",
        "name": "test_resources_migrate_ActivePeople",
        "synchronize": true,
        "tableName": "test_resources_migrate_ActivePeople",
        "type": "view",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {},
        "deps": [
          "test_resources_migrate_ActivePeople",
          "test_resources_migrate_InActivePeople",
        ],
        "expression": "SELECT
  ActivePeople_0.Name
FROM test_resources_migrate_ActivePeople AS ActivePeople_0
UNION SELECT
  InActivePeople_1.Name
FROM test_resources_migrate_InActivePeople AS InActivePeople_1;",
        "name": "test_resources_migrate_AllPeoples",
        "synchronize": true,
        "tableName": "test_resources_migrate_AllPeoples",
        "type": "view",
      },
    },
  ],
  [
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {
          "Active": {
            "default": false,
            "name": "Active",
            "nullable": true,
            "type": "boolean",
          },
          "ID": {
            "default": undefined,
            "length": 36,
            "name": "ID",
            "nullable": false,
            "primary": true,
            "type": "nvarchar",
          },
          "Level": {
            "name": "Level",
            "nullable": true,
            "type": "integer",
          },
          "Title": {
            "length": 255,
            "name": "Title",
            "nullable": true,
            "type": "nvarchar",
          },
        },
        "deps": [],
        "name": "test_resources_migrate_Job",
        "synchronize": true,
        "tableName": "test_resources_migrate_Job",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {},
        "deps": [
          "test_resources_migrate_Job",
        ],
        "expression": "SELECT
  Job_0.ID,
  Job_0.Title,
  Job_0.Level,
  Job_0.Active
FROM test_resources_migrate_Job AS Job_0
WHERE Job_0.Active = TRUE;",
        "name": "test_resources_migrate_ActiveJobs",
        "synchronize": true,
        "tableName": "test_resources_migrate_ActiveJobs",
        "type": "view",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {
          "Active": {
            "default": false,
            "name": "Active",
            "nullable": true,
            "type": "boolean",
          },
          "ID": {
            "default": undefined,
            "length": 36,
            "name": "ID",
            "nullable": false,
            "primary": true,
            "type": "nvarchar",
          },
          "Name": {
            "default": undefined,
            "length": 100,
            "name": "Name",
            "nullable": false,
            "primary": true,
            "type": "nvarchar",
          },
        },
        "deps": [],
        "name": "test_resources_migrate_People",
        "synchronize": true,
        "tableName": "test_resources_migrate_People",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {},
        "deps": [
          "test_resources_migrate_People",
        ],
        "expression": "SELECT
  People_0.Name
FROM test_resources_migrate_People AS People_0
WHERE People_0.Active = FALSE;",
        "name": "test_resources_migrate_InActivePeople",
        "synchronize": true,
        "tableName": "test_resources_migrate_InActivePeople",
        "type": "view",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {},
        "deps": [
          "test_resources_migrate_People",
        ],
        "expression": "SELECT
  People_0.Name
FROM test_resources_migrate_People AS People_0
WHERE People_0.Active = TRUE;",
        "name": "test_resources_migrate_ActivePeople",
        "synchronize": true,
        "tableName": "test_resources_migrate_ActivePeople",
        "type": "view",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {},
        "deps": [
          "test_resources_migrate_ActivePeople",
          "test_resources_migrate_InActivePeople",
        ],
        "expression": "SELECT
  ActivePeople_0.Name
FROM test_resources_migrate_ActivePeople AS ActivePeople_0
UNION SELECT
  InActivePeople_1.Name
FROM test_resources_migrate_InActivePeople AS InActivePeople_1;",
        "name": "test_resources_migrate_AllPeoples",
        "synchronize": true,
        "tableName": "test_resources_migrate_AllPeoples",
        "type": "view",
      },
    },
  ],
  [
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {
          "Active": {
            "default": false,
            "name": "Active",
            "nullable": true,
            "type": "boolean",
          },
          "ID": {
            "default": undefined,
            "length": 36,
            "name": "ID",
            "nullable": false,
            "primary": true,
            "type": "nvarchar",
          },
          "Level": {
            "name": "Level",
            "nullable": true,
            "type": "integer",
          },
          "Title": {
            "length": 255,
            "name": "Title",
            "nullable": true,
            "type": "nvarchar",
          },
        },
        "deps": [],
        "name": "test_resources_migrate_Job",
        "synchronize": true,
        "tableName": "test_resources_migrate_Job",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {},
        "deps": [
          "test_resources_migrate_Job",
        ],
        "expression": "SELECT
  Job_0.ID,
  Job_0.Title,
  Job_0.Level,
  Job_0.Active
FROM test_resources_migrate_Job AS Job_0
WHERE Job_0.Active = TRUE;",
        "name": "test_resources_migrate_ActiveJobs",
        "synchronize": true,
        "tableName": "test_resources_migrate_ActiveJobs",
        "type": "view",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {
          "Active": {
            "default": false,
            "name": "Active",
            "nullable": true,
            "type": "boolean",
          },
          "ID": {
            "default": undefined,
            "length": 36,
            "name": "ID",
            "nullable": false,
            "primary": true,
            "type": "nvarchar",
          },
          "Name": {
            "default": undefined,
            "length": 100,
            "name": "Name",
            "nullable": false,
            "primary": true,
            "type": "nvarchar",
          },
        },
        "deps": [],
        "name": "test_resources_migrate_People",
        "synchronize": true,
        "tableName": "test_resources_migrate_People",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {},
        "deps": [
          "test_resources_migrate_People",
        ],
        "expression": "SELECT
  People_0.Name
FROM test_resources_migrate_People AS People_0;",
        "name": "test_resources_migrate_AllPeoples",
        "synchronize": true,
        "tableName": "test_resources_migrate_AllPeoples",
        "type": "view",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {},
        "deps": [
          "test_resources_migrate_People",
        ],
        "expression": "SELECT
  People_0.Name
FROM test_resources_migrate_People AS People_0
WHERE People_0.Active = FALSE;",
        "name": "test_resources_migrate_InActivePeople",
        "synchronize": true,
        "tableName": "test_resources_migrate_InActivePeople",
        "type": "view",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {},
        "deps": [
          "test_resources_migrate_People",
        ],
        "expression": "SELECT
  People_0.Name
FROM test_resources_migrate_People AS People_0
WHERE People_0.Active = TRUE;",
        "name": "test_resources_migrate_ActivePeople",
        "synchronize": true,
        "tableName": "test_resources_migrate_ActivePeople",
        "type": "view",
      },
    },
  ],
  [
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {
          "Active": {
            "default": false,
            "name": "Active",
            "nullable": true,
            "type": "boolean",
          },
          "ID": {
            "default": undefined,
            "length": 36,
            "name": "ID",
            "nullable": false,
            "primary": true,
            "type": "nvarchar",
          },
          "Level": {
            "name": "Level",
            "nullable": true,
            "type": "integer",
          },
          "People_ID": {
            "length": 36,
            "name": "People_ID",
            "nullable": true,
            "type": "nvarchar",
          },
          "People_Name": {
            "length": 100,
            "name": "People_Name",
            "nullable": true,
            "type": "nvarchar",
          },
          "Title": {
            "length": 255,
            "name": "Title",
            "nullable": true,
            "type": "nvarchar",
          },
        },
        "deps": [],
        "name": "test_resources_migrate_Job",
        "synchronize": true,
        "tableName": "test_resources_migrate_Job",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {},
        "deps": [
          "test_resources_migrate_Job",
        ],
        "expression": "SELECT
  Job_0.ID,
  Job_0.Title,
  Job_0.Level,
  Job_0.Active,
  Job_0.People_ID,
  Job_0.People_Name
FROM test_resources_migrate_Job AS Job_0
WHERE Job_0.Active = TRUE;",
        "name": "test_resources_migrate_ActiveJobs",
        "synchronize": true,
        "tableName": "test_resources_migrate_ActiveJobs",
        "type": "view",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {
          "Active": {
            "default": false,
            "name": "Active",
            "nullable": true,
            "type": "boolean",
          },
          "ID": {
            "default": undefined,
            "length": 36,
            "name": "ID",
            "nullable": false,
            "primary": true,
            "type": "nvarchar",
          },
          "Name": {
            "default": undefined,
            "length": 100,
            "name": "Name",
            "nullable": false,
            "primary": true,
            "type": "nvarchar",
          },
        },
        "deps": [],
        "name": "test_resources_migrate_People",
        "synchronize": true,
        "tableName": "test_resources_migrate_People",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {},
        "deps": [
          "test_resources_migrate_People",
          "test_resources_migrate_Job",
        ],
        "expression": "SELECT
  People_0.Name,
  People_0.Active,
  Job_1.Title,
  Job_1.Level,
  Job_1.Active AS JobActive
FROM (test_resources_migrate_People AS People_0 LEFT JOIN test_resources_migrate_Job AS Job_1 ON ((Job_1.People_ID = People_0.ID) AND (Job_1.People_Name = People_0.Name)));",
        "name": "test_resources_migrate_PeopleWithJob",
        "synchronize": true,
        "tableName": "test_resources_migrate_PeopleWithJob",
        "type": "view",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {},
        "deps": [
          "test_resources_migrate_People",
        ],
        "expression": "SELECT
  People_0.Name
FROM test_resources_migrate_People AS People_0;",
        "name": "test_resources_migrate_AllPeoples",
        "synchronize": true,
        "tableName": "test_resources_migrate_AllPeoples",
        "type": "view",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {},
        "deps": [
          "test_resources_migrate_People",
        ],
        "expression": "SELECT
  People_0.Name
FROM test_resources_migrate_People AS People_0
WHERE People_0.Active = FALSE;",
        "name": "test_resources_migrate_InActivePeople",
        "synchronize": true,
        "tableName": "test_resources_migrate_InActivePeople",
        "type": "view",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {},
        "deps": [
          "test_resources_migrate_People",
        ],
        "expression": "SELECT
  People_0.Name
FROM test_resources_migrate_People AS People_0
WHERE People_0.Active = TRUE;",
        "name": "test_resources_migrate_ActivePeople",
        "synchronize": true,
        "tableName": "test_resources_migrate_ActivePeople",
        "type": "view",
      },
    },
  ],
  [
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {
          "ID": {
            "default": undefined,
            "length": 36,
            "name": "ID",
            "nullable": false,
            "primary": true,
            "type": "nvarchar",
          },
          "Title": {
            "length": 255,
            "name": "Title",
            "nullable": true,
            "type": "nvarchar",
          },
          "locale": {
            "default": undefined,
            "length": 14,
            "name": "locale",
            "nullable": false,
            "primary": true,
            "type": "nvarchar",
          },
        },
        "deps": [],
        "name": "test_resources_migrate_Job_texts",
        "synchronize": true,
        "tableName": "test_resources_migrate_Job_texts",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {
          "Active": {
            "default": false,
            "name": "Active",
            "nullable": true,
            "type": "boolean",
          },
          "ID": {
            "default": undefined,
            "length": 36,
            "name": "ID",
            "nullable": false,
            "primary": true,
            "type": "nvarchar",
          },
          "Level": {
            "name": "Level",
            "nullable": true,
            "type": "integer",
          },
          "People_ID": {
            "length": 36,
            "name": "People_ID",
            "nullable": true,
            "type": "nvarchar",
          },
          "People_Name": {
            "length": 100,
            "name": "People_Name",
            "nullable": true,
            "type": "nvarchar",
          },
          "Title": {
            "length": 255,
            "name": "Title",
            "nullable": true,
            "type": "nvarchar",
          },
        },
        "deps": [],
        "name": "test_resources_migrate_Job",
        "synchronize": true,
        "tableName": "test_resources_migrate_Job",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {},
        "deps": [
          "test_resources_migrate_Job",
          "test_resources_migrate_Job_texts",
        ],
        "expression": "SELECT
  L_0.ID,
  coalesce(localized_fr_1.Title, L_0.Title) AS Title,
  L_0.Level,
  L_0.Active,
  L_0.People_ID,
  L_0.People_Name
FROM (test_resources_migrate_Job AS L_0 LEFT JOIN test_resources_migrate_Job_texts AS localized_fr_1 ON localized_fr_1.ID = L_0.ID AND localized_fr_1.locale = 'fr');",
        "name": "localized_fr_test_resources_migrate_Job",
        "synchronize": true,
        "tableName": "localized_fr_test_resources_migrate_Job",
        "type": "view",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {},
        "deps": [
          "localized_fr_test_resources_migrate_Job",
        ],
        "expression": "SELECT
  Job_0.ID,
  Job_0.Title,
  Job_0.Level,
  Job_0.Active,
  Job_0.People_ID,
  Job_0.People_Name
FROM localized_fr_test_resources_migrate_Job AS Job_0
WHERE Job_0.Active = TRUE;",
        "name": "localized_fr_test_resources_migrate_ActiveJobs",
        "synchronize": true,
        "tableName": "localized_fr_test_resources_migrate_ActiveJobs",
        "type": "view",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {},
        "deps": [
          "test_resources_migrate_Job",
          "test_resources_migrate_Job_texts",
        ],
        "expression": "SELECT
  L_0.ID,
  coalesce(localized_de_1.Title, L_0.Title) AS Title,
  L_0.Level,
  L_0.Active,
  L_0.People_ID,
  L_0.People_Name
FROM (test_resources_migrate_Job AS L_0 LEFT JOIN test_resources_migrate_Job_texts AS localized_de_1 ON localized_de_1.ID = L_0.ID AND localized_de_1.locale = 'de');",
        "name": "localized_de_test_resources_migrate_Job",
        "synchronize": true,
        "tableName": "localized_de_test_resources_migrate_Job",
        "type": "view",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {},
        "deps": [
          "localized_de_test_resources_migrate_Job",
        ],
        "expression": "SELECT
  Job_0.ID,
  Job_0.Title,
  Job_0.Level,
  Job_0.Active,
  Job_0.People_ID,
  Job_0.People_Name
FROM localized_de_test_resources_migrate_Job AS Job_0
WHERE Job_0.Active = TRUE;",
        "name": "localized_de_test_resources_migrate_ActiveJobs",
        "synchronize": true,
        "tableName": "localized_de_test_resources_migrate_ActiveJobs",
        "type": "view",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {},
        "deps": [
          "test_resources_migrate_Job",
          "test_resources_migrate_Job_texts",
        ],
        "expression": "SELECT
  L_0.ID,
  coalesce(localized_1.Title, L_0.Title) AS Title,
  L_0.Level,
  L_0.Active,
  L_0.People_ID,
  L_0.People_Name
FROM (test_resources_migrate_Job AS L_0 LEFT JOIN test_resources_migrate_Job_texts AS localized_1 ON localized_1.ID = L_0.ID AND localized_1.locale = 'en');",
        "name": "localized_test_resources_migrate_Job",
        "synchronize": true,
        "tableName": "localized_test_resources_migrate_Job",
        "type": "view",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {},
        "deps": [
          "localized_test_resources_migrate_Job",
        ],
        "expression": "SELECT
  Job_0.ID,
  Job_0.Title,
  Job_0.Level,
  Job_0.Active,
  Job_0.People_ID,
  Job_0.People_Name
FROM localized_test_resources_migrate_Job AS Job_0
WHERE Job_0.Active = TRUE;",
        "name": "localized_test_resources_migrate_ActiveJobs",
        "synchronize": true,
        "tableName": "localized_test_resources_migrate_ActiveJobs",
        "type": "view",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {},
        "deps": [
          "test_resources_migrate_Job",
        ],
        "expression": "SELECT
  Job_0.ID,
  Job_0.Title,
  Job_0.Level,
  Job_0.Active,
  Job_0.People_ID,
  Job_0.People_Name
FROM test_resources_migrate_Job AS Job_0
WHERE Job_0.Active = TRUE;",
        "name": "test_resources_migrate_ActiveJobs",
        "synchronize": true,
        "tableName": "test_resources_migrate_ActiveJobs",
        "type": "view",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {
          "Active": {
            "default": false,
            "name": "Active",
            "nullable": true,
            "type": "boolean",
          },
          "ID": {
            "default": undefined,
            "length": 36,
            "name": "ID",
            "nullable": false,
            "primary": true,
            "type": "nvarchar",
          },
          "Name": {
            "default": undefined,
            "length": 100,
            "name": "Name",
            "nullable": false,
            "primary": true,
            "type": "nvarchar",
          },
        },
        "deps": [],
        "name": "test_resources_migrate_People",
        "synchronize": true,
        "tableName": "test_resources_migrate_People",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {},
        "deps": [
          "test_resources_migrate_People",
        ],
        "expression": "SELECT
  L.ID,
  L.Name,
  L.Active
FROM test_resources_migrate_People AS L;",
        "name": "localized_fr_test_resources_migrate_People",
        "synchronize": true,
        "tableName": "localized_fr_test_resources_migrate_People",
        "type": "view",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {},
        "deps": [
          "localized_fr_test_resources_migrate_People",
          "localized_fr_test_resources_migrate_Job",
        ],
        "expression": "SELECT
  People_0.Name,
  People_0.Active,
  Job_1.Title,
  Job_1.Level,
  Job_1.Active AS JobActive
FROM (localized_fr_test_resources_migrate_People AS People_0 LEFT JOIN localized_fr_test_resources_migrate_Job AS Job_1 ON ((Job_1.People_ID = People_0.ID) AND (Job_1.People_Name = People_0.Name)));",
        "name": "localized_fr_test_resources_migrate_PeopleWithJob",
        "synchronize": true,
        "tableName": "localized_fr_test_resources_migrate_PeopleWithJob",
        "type": "view",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {},
        "deps": [
          "test_resources_migrate_People",
        ],
        "expression": "SELECT
  L.ID,
  L.Name,
  L.Active
FROM test_resources_migrate_People AS L;",
        "name": "localized_de_test_resources_migrate_People",
        "synchronize": true,
        "tableName": "localized_de_test_resources_migrate_People",
        "type": "view",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {},
        "deps": [
          "localized_de_test_resources_migrate_People",
          "localized_de_test_resources_migrate_Job",
        ],
        "expression": "SELECT
  People_0.Name,
  People_0.Active,
  Job_1.Title,
  Job_1.Level,
  Job_1.Active AS JobActive
FROM (localized_de_test_resources_migrate_People AS People_0 LEFT JOIN localized_de_test_resources_migrate_Job AS Job_1 ON ((Job_1.People_ID = People_0.ID) AND (Job_1.People_Name = People_0.Name)));",
        "name": "localized_de_test_resources_migrate_PeopleWithJob",
        "synchronize": true,
        "tableName": "localized_de_test_resources_migrate_PeopleWithJob",
        "type": "view",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {},
        "deps": [
          "test_resources_migrate_People",
        ],
        "expression": "SELECT
  L.ID,
  L.Name,
  L.Active
FROM test_resources_migrate_People AS L;",
        "name": "localized_test_resources_migrate_People",
        "synchronize": true,
        "tableName": "localized_test_resources_migrate_People",
        "type": "view",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {},
        "deps": [
          "localized_test_resources_migrate_People",
          "localized_test_resources_migrate_Job",
        ],
        "expression": "SELECT
  People_0.Name,
  People_0.Active,
  Job_1.Title,
  Job_1.Level,
  Job_1.Active AS JobActive
FROM (localized_test_resources_migrate_People AS People_0 LEFT JOIN localized_test_resources_migrate_Job AS Job_1 ON ((Job_1.People_ID = People_0.ID) AND (Job_1.People_Name = People_0.Name)));",
        "name": "localized_test_resources_migrate_PeopleWithJob",
        "synchronize": true,
        "tableName": "localized_test_resources_migrate_PeopleWithJob",
        "type": "view",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {},
        "deps": [
          "test_resources_migrate_People",
          "test_resources_migrate_Job",
        ],
        "expression": "SELECT
  People_0.Name,
  People_0.Active,
  Job_1.Title,
  Job_1.Level,
  Job_1.Active AS JobActive
FROM (test_resources_migrate_People AS People_0 LEFT JOIN test_resources_migrate_Job AS Job_1 ON ((Job_1.People_ID = People_0.ID) AND (Job_1.People_Name = People_0.Name)));",
        "name": "test_resources_migrate_PeopleWithJob",
        "synchronize": true,
        "tableName": "test_resources_migrate_PeopleWithJob",
        "type": "view",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {},
        "deps": [
          "test_resources_migrate_People",
        ],
        "expression": "SELECT
  People_0.Name
FROM test_resources_migrate_People AS People_0;",
        "name": "test_resources_migrate_AllPeoples",
        "synchronize": true,
        "tableName": "test_resources_migrate_AllPeoples",
        "type": "view",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {},
        "deps": [
          "test_resources_migrate_People",
        ],
        "expression": "SELECT
  People_0.Name
FROM test_resources_migrate_People AS People_0
WHERE People_0.Active = FALSE;",
        "name": "test_resources_migrate_InActivePeople",
        "synchronize": true,
        "tableName": "test_resources_migrate_InActivePeople",
        "type": "view",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {},
        "deps": [
          "test_resources_migrate_People",
        ],
        "expression": "SELECT
  People_0.Name
FROM test_resources_migrate_People AS People_0
WHERE People_0.Active = TRUE;",
        "name": "test_resources_migrate_ActivePeople",
        "synchronize": true,
        "tableName": "test_resources_migrate_ActivePeople",
        "type": "view",
      },
    },
  ],
  [
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {
          "ID": {
            "default": undefined,
            "length": 36,
            "name": "ID",
            "nullable": false,
            "primary": true,
            "type": "nvarchar",
          },
          "Title": {
            "length": 255,
            "name": "Title",
            "nullable": true,
            "type": "nvarchar",
          },
          "locale": {
            "default": undefined,
            "length": 14,
            "name": "locale",
            "nullable": false,
            "primary": true,
            "type": "nvarchar",
          },
        },
        "deps": [],
        "name": "test_resources_migrate_Job_texts",
        "synchronize": true,
        "tableName": "test_resources_migrate_Job_texts",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {
          "Active": {
            "default": false,
            "name": "Active",
            "nullable": true,
            "type": "boolean",
          },
          "ID": {
            "default": undefined,
            "length": 36,
            "name": "ID",
            "nullable": false,
            "primary": true,
            "type": "nvarchar",
          },
          "Level": {
            "name": "Level",
            "nullable": true,
            "type": "integer",
          },
          "People_ID": {
            "length": 36,
            "name": "People_ID",
            "nullable": true,
            "type": "nvarchar",
          },
          "People_Name": {
            "length": 100,
            "name": "People_Name",
            "nullable": true,
            "type": "nvarchar",
          },
          "Title": {
            "length": 255,
            "name": "Title",
            "nullable": true,
            "type": "nvarchar",
          },
        },
        "deps": [],
        "name": "test_resources_migrate_Job",
        "synchronize": true,
        "tableName": "test_resources_migrate_Job",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {},
        "deps": [
          "test_resources_migrate_Job",
          "test_resources_migrate_Job_texts",
        ],
        "expression": "SELECT
  L_0.ID,
  coalesce(localized_fr_1.Title, L_0.Title) AS Title,
  L_0.Level,
  L_0.Active,
  L_0.People_ID,
  L_0.People_Name
FROM (test_resources_migrate_Job AS L_0 LEFT JOIN test_resources_migrate_Job_texts AS localized_fr_1 ON localized_fr_1.ID = L_0.ID AND localized_fr_1.locale = 'fr');",
        "name": "localized_fr_test_resources_migrate_Job",
        "synchronize": true,
        "tableName": "localized_fr_test_resources_migrate_Job",
        "type": "view",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {},
        "deps": [
          "localized_fr_test_resources_migrate_Job",
        ],
        "expression": "SELECT
  Job_0.ID,
  Job_0.Title,
  Job_0.Level,
  Job_0.Active,
  Job_0.People_ID,
  Job_0.People_Name
FROM localized_fr_test_resources_migrate_Job AS Job_0
WHERE Job_0.Active = TRUE;",
        "name": "localized_fr_test_resources_migrate_ActiveJobs",
        "synchronize": true,
        "tableName": "localized_fr_test_resources_migrate_ActiveJobs",
        "type": "view",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {},
        "deps": [
          "test_resources_migrate_Job",
          "test_resources_migrate_Job_texts",
        ],
        "expression": "SELECT
  L_0.ID,
  coalesce(localized_de_1.Title, L_0.Title) AS Title,
  L_0.Level,
  L_0.Active,
  L_0.People_ID,
  L_0.People_Name
FROM (test_resources_migrate_Job AS L_0 LEFT JOIN test_resources_migrate_Job_texts AS localized_de_1 ON localized_de_1.ID = L_0.ID AND localized_de_1.locale = 'de');",
        "name": "localized_de_test_resources_migrate_Job",
        "synchronize": true,
        "tableName": "localized_de_test_resources_migrate_Job",
        "type": "view",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {},
        "deps": [
          "localized_de_test_resources_migrate_Job",
        ],
        "expression": "SELECT
  Job_0.ID,
  Job_0.Title,
  Job_0.Level,
  Job_0.Active,
  Job_0.People_ID,
  Job_0.People_Name
FROM localized_de_test_resources_migrate_Job AS Job_0
WHERE Job_0.Active = TRUE;",
        "name": "localized_de_test_resources_migrate_ActiveJobs",
        "synchronize": true,
        "tableName": "localized_de_test_resources_migrate_ActiveJobs",
        "type": "view",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {},
        "deps": [
          "test_resources_migrate_Job",
          "test_resources_migrate_Job_texts",
        ],
        "expression": "SELECT
  L_0.ID,
  coalesce(localized_1.Title, L_0.Title) AS Title,
  L_0.Level,
  L_0.Active,
  L_0.People_ID,
  L_0.People_Name
FROM (test_resources_migrate_Job AS L_0 LEFT JOIN test_resources_migrate_Job_texts AS localized_1 ON localized_1.ID = L_0.ID AND localized_1.locale = 'en');",
        "name": "localized_test_resources_migrate_Job",
        "synchronize": true,
        "tableName": "localized_test_resources_migrate_Job",
        "type": "view",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {},
        "deps": [
          "localized_test_resources_migrate_Job",
        ],
        "expression": "SELECT
  Job_0.ID,
  Job_0.Title,
  Job_0.Level,
  Job_0.Active,
  Job_0.People_ID,
  Job_0.People_Name
FROM localized_test_resources_migrate_Job AS Job_0
WHERE Job_0.Active = TRUE;",
        "name": "localized_test_resources_migrate_ActiveJobs",
        "synchronize": true,
        "tableName": "localized_test_resources_migrate_ActiveJobs",
        "type": "view",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {},
        "deps": [
          "test_resources_migrate_Job",
        ],
        "expression": "SELECT
  Job_0.ID,
  Job_0.Title,
  Job_0.Level,
  Job_0.Active,
  Job_0.People_ID,
  Job_0.People_Name
FROM test_resources_migrate_Job AS Job_0
WHERE Job_0.Active = TRUE;",
        "name": "test_resources_migrate_ActiveJobs",
        "synchronize": true,
        "tableName": "test_resources_migrate_ActiveJobs",
        "type": "view",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {
          "Active": {
            "default": false,
            "name": "Active",
            "nullable": true,
            "type": "boolean",
          },
          "ID": {
            "default": undefined,
            "length": 36,
            "name": "ID",
            "nullable": false,
            "primary": true,
            "type": "nvarchar",
          },
          "Name": {
            "default": undefined,
            "length": 100,
            "name": "Name",
            "nullable": false,
            "primary": true,
            "type": "nvarchar",
          },
        },
        "deps": [],
        "name": "test_resources_migrate_People",
        "synchronize": true,
        "tableName": "test_resources_migrate_People",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {},
        "deps": [
          "test_resources_migrate_People",
        ],
        "expression": "SELECT
  L.ID,
  L.Name,
  L.Active
FROM test_resources_migrate_People AS L;",
        "name": "localized_fr_test_resources_migrate_People",
        "synchronize": true,
        "tableName": "localized_fr_test_resources_migrate_People",
        "type": "view",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {},
        "deps": [
          "localized_fr_test_resources_migrate_People",
          "localized_fr_test_resources_migrate_Job",
        ],
        "expression": "SELECT
  People_0.Name,
  People_0.Active,
  Job_1.Title,
  Job_1.Level,
  Job_1.Active AS JobActive
FROM (localized_fr_test_resources_migrate_People AS People_0 LEFT JOIN localized_fr_test_resources_migrate_Job AS Job_1 ON ((Job_1.People_ID = People_0.ID) AND (Job_1.People_Name = People_0.Name)));",
        "name": "localized_fr_test_resources_migrate_PeopleWithJob",
        "synchronize": true,
        "tableName": "localized_fr_test_resources_migrate_PeopleWithJob",
        "type": "view",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {},
        "deps": [
          "test_resources_migrate_People",
        ],
        "expression": "SELECT
  L.ID,
  L.Name,
  L.Active
FROM test_resources_migrate_People AS L;",
        "name": "localized_de_test_resources_migrate_People",
        "synchronize": true,
        "tableName": "localized_de_test_resources_migrate_People",
        "type": "view",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {},
        "deps": [
          "localized_de_test_resources_migrate_People",
          "localized_de_test_resources_migrate_Job",
        ],
        "expression": "SELECT
  People_0.Name,
  People_0.Active,
  Job_1.Title,
  Job_1.Level,
  Job_1.Active AS JobActive
FROM (localized_de_test_resources_migrate_People AS People_0 LEFT JOIN localized_de_test_resources_migrate_Job AS Job_1 ON ((Job_1.People_ID = People_0.ID) AND (Job_1.People_Name = People_0.Name)));",
        "name": "localized_de_test_resources_migrate_PeopleWithJob",
        "synchronize": true,
        "tableName": "localized_de_test_resources_migrate_PeopleWithJob",
        "type": "view",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {},
        "deps": [
          "test_resources_migrate_People",
        ],
        "expression": "SELECT
  L.ID,
  L.Name,
  L.Active
FROM test_resources_migrate_People AS L;",
        "name": "localized_test_resources_migrate_People",
        "synchronize": true,
        "tableName": "localized_test_resources_migrate_People",
        "type": "view",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {},
        "deps": [
          "localized_test_resources_migrate_People",
          "localized_test_resources_migrate_Job",
        ],
        "expression": "SELECT
  People_0.Name,
  People_0.Active,
  Job_1.Title,
  Job_1.Level,
  Job_1.Active AS JobActive
FROM (localized_test_resources_migrate_People AS People_0 LEFT JOIN localized_test_resources_migrate_Job AS Job_1 ON ((Job_1.People_ID = People_0.ID) AND (Job_1.People_Name = People_0.Name)));",
        "name": "localized_test_resources_migrate_PeopleWithJob",
        "synchronize": true,
        "tableName": "localized_test_resources_migrate_PeopleWithJob",
        "type": "view",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {},
        "deps": [
          "test_resources_migrate_People",
          "test_resources_migrate_Job",
        ],
        "expression": "SELECT
  People_0.Name,
  People_0.Active,
  Job_1.Title,
  Job_1.Level,
  Job_1.Active AS JobActive
FROM (test_resources_migrate_People AS People_0 LEFT JOIN test_resources_migrate_Job AS Job_1 ON ((Job_1.People_ID = People_0.ID) AND (Job_1.People_Name = People_0.Name)));",
        "name": "test_resources_migrate_PeopleWithJob",
        "synchronize": true,
        "tableName": "test_resources_migrate_PeopleWithJob",
        "type": "view",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {},
        "deps": [
          "test_resources_migrate_People",
        ],
        "expression": "SELECT
  People_0.Name
FROM test_resources_migrate_People AS People_0;",
        "name": "test_resources_migrate_AllPeoples",
        "synchronize": true,
        "tableName": "test_resources_migrate_AllPeoples",
        "type": "view",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {},
        "deps": [
          "test_resources_migrate_People",
        ],
        "expression": "SELECT
  People_0.Name
FROM test_resources_migrate_People AS People_0
WHERE People_0.Active = FALSE;",
        "name": "test_resources_migrate_InActivePeople",
        "synchronize": true,
        "tableName": "test_resources_migrate_InActivePeople",
        "type": "view",
      },
    },
    EntitySchema {
      "@instanceof": Symbol(EntitySchema),
      "options": {
        "columns": {},
        "deps": [
          "test_resources_migrate_People",
        ],
        "expression": "SELECT
  People_0.Name
FROM test_resources_migrate_People AS People_0
WHERE People_0.Active = TRUE;",
        "name": "test_resources_migrate_ActivePeople",
        "synchronize": true,
        "tableName": "test_resources_migrate_ActivePeople",
        "type": "view",
      },
    },
  ],
]
`;

exports[`TypeORM Test Suite should support migrate tables: 0->1 1`] = `
[
  {
    "parameters": undefined,
    "query": "CREATE TABLE \`test_resources_migrate_People\` (\`ID\` varchar(36) NOT NULL, \`Name\` varchar(100) NULL, PRIMARY KEY (\`ID\`)) ENGINE=InnoDB CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_unicode_ci'",
  },
  {
    "parameters": undefined,
    "query": "CREATE TABLE \`cds_mysql_csv_history\` (\`id\` int NOT NULL AUTO_INCREMENT COMMENT 'dummy id', \`entity\` varchar(500) NOT NULL COMMENT 'entity name', \`hash\` varchar(64) NOT NULL COMMENT 'sha256 hash', PRIMARY KEY (\`id\`)) ENGINE=InnoDB CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_unicode_ci'",
  },
]
`;

exports[`TypeORM Test Suite should support migrate tables: 1->2 1`] = `
[
  {
    "parameters": undefined,
    "query": "ALTER TABLE \`test_resources_migrate_People\` ADD \`Age\` int NULL",
  },
  {
    "parameters": undefined,
    "query": "ALTER TABLE \`test_resources_migrate_People\` DROP PRIMARY KEY",
  },
  {
    "parameters": undefined,
    "query": "ALTER TABLE \`test_resources_migrate_People\` ADD PRIMARY KEY (\`ID\`, \`Name\`)",
  },
  {
    "parameters": undefined,
    "query": "ALTER TABLE \`test_resources_migrate_People\` CHANGE \`Name\` \`Name\` varchar(100) NOT NULL",
  },
]
`;

exports[`TypeORM Test Suite should support migrate tables: 2->3 1`] = `
[
  {
    "parameters": undefined,
    "query": "ALTER TABLE \`test_resources_migrate_People\` ADD \`Active\` tinyint NULL DEFAULT 0",
  },
  {
    "parameters": undefined,
    "query": "CREATE VIEW \`test_resources_migrate_ActivePeople\` AS SELECT
  People_0.ID,
  People_0.Name,
  People_0.Age,
  People_0.Active
FROM test_resources_migrate_People AS People_0
WHERE People_0.Active = TRUE;",
  },
  {
    "parameters": [
      "cds_admin",
      "VIEW",
      "test_resources_migrate_ActivePeople",
      "SELECT
  People_0.ID,
  People_0.Name,
  People_0.Age,
  People_0.Active
FROM test_resources_migrate_People AS People_0
WHERE People_0.Active = TRUE;",
    ],
    "query": "INSERT INTO \`cds_admin\`.\`typeorm_metadata\`(\`database\`, \`schema\`, \`table\`, \`type\`, \`name\`, \`value\`) VALUES (DEFAULT, ?, DEFAULT, ?, ?, ?)",
  },
]
`;

exports[`TypeORM Test Suite should support migrate tables: 3->4 1`] = `
[
  {
    "parameters": [
      "VIEW",
      "test_resources_migrate_ActivePeople",
      "cds_admin",
    ],
    "query": "DELETE FROM \`cds_admin\`.\`typeorm_metadata\` WHERE \`type\` = ? AND \`name\` = ? AND \`schema\` = ?",
  },
  {
    "parameters": undefined,
    "query": "DROP VIEW \`test_resources_migrate_ActivePeople\`",
  },
  {
    "parameters": undefined,
    "query": "CREATE VIEW \`test_resources_migrate_InActivePeople\` AS SELECT
  People_0.Name
FROM test_resources_migrate_People AS People_0
WHERE People_0.Active = FALSE;",
  },
  {
    "parameters": [
      "cds_admin",
      "VIEW",
      "test_resources_migrate_InActivePeople",
      "SELECT
  People_0.Name
FROM test_resources_migrate_People AS People_0
WHERE People_0.Active = FALSE;",
    ],
    "query": "INSERT INTO \`cds_admin\`.\`typeorm_metadata\`(\`database\`, \`schema\`, \`table\`, \`type\`, \`name\`, \`value\`) VALUES (DEFAULT, ?, DEFAULT, ?, ?, ?)",
  },
  {
    "parameters": undefined,
    "query": "CREATE VIEW \`test_resources_migrate_ActivePeople\` AS SELECT
  People_0.Name
FROM test_resources_migrate_People AS People_0
WHERE People_0.Active = TRUE;",
  },
  {
    "parameters": [
      "cds_admin",
      "VIEW",
      "test_resources_migrate_ActivePeople",
      "SELECT
  People_0.Name
FROM test_resources_migrate_People AS People_0
WHERE People_0.Active = TRUE;",
    ],
    "query": "INSERT INTO \`cds_admin\`.\`typeorm_metadata\`(\`database\`, \`schema\`, \`table\`, \`type\`, \`name\`, \`value\`) VALUES (DEFAULT, ?, DEFAULT, ?, ?, ?)",
  },
  {
    "parameters": undefined,
    "query": "CREATE VIEW \`test_resources_migrate_AllPeoples\` AS SELECT
  ActivePeople_0.Name
FROM test_resources_migrate_ActivePeople AS ActivePeople_0
UNION SELECT
  InActivePeople_1.Name
FROM test_resources_migrate_InActivePeople AS InActivePeople_1;",
  },
  {
    "parameters": [
      "cds_admin",
      "VIEW",
      "test_resources_migrate_AllPeoples",
      "SELECT
  ActivePeople_0.Name
FROM test_resources_migrate_ActivePeople AS ActivePeople_0
UNION SELECT
  InActivePeople_1.Name
FROM test_resources_migrate_InActivePeople AS InActivePeople_1;",
    ],
    "query": "INSERT INTO \`cds_admin\`.\`typeorm_metadata\`(\`database\`, \`schema\`, \`table\`, \`type\`, \`name\`, \`value\`) VALUES (DEFAULT, ?, DEFAULT, ?, ?, ?)",
  },
]
`;

exports[`TypeORM Test Suite should support migrate tables: 4->5 1`] = `
[
  {
    "parameters": undefined,
    "query": "CREATE TABLE \`test_resources_migrate_Job\` (\`ID\` varchar(36) NOT NULL, \`Title\` varchar(255) NULL, \`Level\` int NULL, \`Active\` tinyint NULL DEFAULT 0, PRIMARY KEY (\`ID\`)) ENGINE=InnoDB CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_unicode_ci'",
  },
  {
    "parameters": undefined,
    "query": "CREATE VIEW \`test_resources_migrate_ActiveJobs\` AS SELECT
  Job_0.ID,
  Job_0.Title,
  Job_0.Level,
  Job_0.Active
FROM test_resources_migrate_Job AS Job_0
WHERE Job_0.Active = TRUE;",
  },
  {
    "parameters": [
      "cds_admin",
      "VIEW",
      "test_resources_migrate_ActiveJobs",
      "SELECT
  Job_0.ID,
  Job_0.Title,
  Job_0.Level,
  Job_0.Active
FROM test_resources_migrate_Job AS Job_0
WHERE Job_0.Active = TRUE;",
    ],
    "query": "INSERT INTO \`cds_admin\`.\`typeorm_metadata\`(\`database\`, \`schema\`, \`table\`, \`type\`, \`name\`, \`value\`) VALUES (DEFAULT, ?, DEFAULT, ?, ?, ?)",
  },
]
`;

exports[`TypeORM Test Suite should support migrate tables: 5->6 1`] = `
[
  {
    "parameters": [
      "VIEW",
      "test_resources_migrate_AllPeoples",
      "cds_admin",
    ],
    "query": "DELETE FROM \`cds_admin\`.\`typeorm_metadata\` WHERE \`type\` = ? AND \`name\` = ? AND \`schema\` = ?",
  },
  {
    "parameters": undefined,
    "query": "DROP VIEW \`test_resources_migrate_AllPeoples\`",
  },
  {
    "parameters": undefined,
    "query": "CREATE VIEW \`test_resources_migrate_AllPeoples\` AS SELECT
  People_0.Name
FROM test_resources_migrate_People AS People_0;",
  },
  {
    "parameters": [
      "cds_admin",
      "VIEW",
      "test_resources_migrate_AllPeoples",
      "SELECT
  People_0.Name
FROM test_resources_migrate_People AS People_0;",
    ],
    "query": "INSERT INTO \`cds_admin\`.\`typeorm_metadata\`(\`database\`, \`schema\`, \`table\`, \`type\`, \`name\`, \`value\`) VALUES (DEFAULT, ?, DEFAULT, ?, ?, ?)",
  },
]
`;

exports[`TypeORM Test Suite should support migrate tables: 6->7 1`] = `
[
  {
    "parameters": [
      "VIEW",
      "test_resources_migrate_ActiveJobs",
      "cds_admin",
    ],
    "query": "DELETE FROM \`cds_admin\`.\`typeorm_metadata\` WHERE \`type\` = ? AND \`name\` = ? AND \`schema\` = ?",
  },
  {
    "parameters": undefined,
    "query": "DROP VIEW \`test_resources_migrate_ActiveJobs\`",
  },
  {
    "parameters": undefined,
    "query": "ALTER TABLE \`test_resources_migrate_Job\` ADD \`People_ID\` varchar(36) NULL",
  },
  {
    "parameters": undefined,
    "query": "ALTER TABLE \`test_resources_migrate_Job\` ADD \`People_Name\` varchar(100) NULL",
  },
  {
    "parameters": undefined,
    "query": "CREATE VIEW \`test_resources_migrate_ActiveJobs\` AS SELECT
  Job_0.ID,
  Job_0.Title,
  Job_0.Level,
  Job_0.Active,
  Job_0.People_ID,
  Job_0.People_Name
FROM test_resources_migrate_Job AS Job_0
WHERE Job_0.Active = TRUE;",
  },
  {
    "parameters": [
      "cds_admin",
      "VIEW",
      "test_resources_migrate_ActiveJobs",
      "SELECT
  Job_0.ID,
  Job_0.Title,
  Job_0.Level,
  Job_0.Active,
  Job_0.People_ID,
  Job_0.People_Name
FROM test_resources_migrate_Job AS Job_0
WHERE Job_0.Active = TRUE;",
    ],
    "query": "INSERT INTO \`cds_admin\`.\`typeorm_metadata\`(\`database\`, \`schema\`, \`table\`, \`type\`, \`name\`, \`value\`) VALUES (DEFAULT, ?, DEFAULT, ?, ?, ?)",
  },
  {
    "parameters": undefined,
    "query": "CREATE VIEW \`test_resources_migrate_PeopleWithJob\` AS SELECT
  People_0.Name,
  People_0.Active,
  Job_1.Title,
  Job_1.Level,
  Job_1.Active AS JobActive
FROM (test_resources_migrate_People AS People_0 LEFT JOIN test_resources_migrate_Job AS Job_1 ON ((Job_1.People_ID = People_0.ID) AND (Job_1.People_Name = People_0.Name)));",
  },
  {
    "parameters": [
      "cds_admin",
      "VIEW",
      "test_resources_migrate_PeopleWithJob",
      "SELECT
  People_0.Name,
  People_0.Active,
  Job_1.Title,
  Job_1.Level,
  Job_1.Active AS JobActive
FROM (test_resources_migrate_People AS People_0 LEFT JOIN test_resources_migrate_Job AS Job_1 ON ((Job_1.People_ID = People_0.ID) AND (Job_1.People_Name = People_0.Name)));",
    ],
    "query": "INSERT INTO \`cds_admin\`.\`typeorm_metadata\`(\`database\`, \`schema\`, \`table\`, \`type\`, \`name\`, \`value\`) VALUES (DEFAULT, ?, DEFAULT, ?, ?, ?)",
  },
]
`;

exports[`TypeORM Test Suite should support migrate tables: 7->8 1`] = `
[
  {
    "parameters": undefined,
    "query": "CREATE TABLE \`test_resources_migrate_Job_texts\` (\`locale\` varchar(14) NOT NULL, \`ID\` varchar(36) NOT NULL, \`Title\` varchar(255) NULL, PRIMARY KEY (\`locale\`, \`ID\`)) ENGINE=InnoDB CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_unicode_ci'",
  },
  {
    "parameters": undefined,
    "query": "CREATE VIEW \`localized_fr_test_resources_migrate_Job\` AS SELECT
  L_0.ID,
  coalesce(localized_fr_1.Title, L_0.Title) AS Title,
  L_0.Level,
  L_0.Active,
  L_0.People_ID,
  L_0.People_Name
FROM (test_resources_migrate_Job AS L_0 LEFT JOIN test_resources_migrate_Job_texts AS localized_fr_1 ON localized_fr_1.ID = L_0.ID AND localized_fr_1.locale = 'fr');",
  },
  {
    "parameters": [
      "cds_admin",
      "VIEW",
      "localized_fr_test_resources_migrate_Job",
      "SELECT
  L_0.ID,
  coalesce(localized_fr_1.Title, L_0.Title) AS Title,
  L_0.Level,
  L_0.Active,
  L_0.People_ID,
  L_0.People_Name
FROM (test_resources_migrate_Job AS L_0 LEFT JOIN test_resources_migrate_Job_texts AS localized_fr_1 ON localized_fr_1.ID = L_0.ID AND localized_fr_1.locale = 'fr');",
    ],
    "query": "INSERT INTO \`cds_admin\`.\`typeorm_metadata\`(\`database\`, \`schema\`, \`table\`, \`type\`, \`name\`, \`value\`) VALUES (DEFAULT, ?, DEFAULT, ?, ?, ?)",
  },
  {
    "parameters": undefined,
    "query": "CREATE VIEW \`localized_fr_test_resources_migrate_ActiveJobs\` AS SELECT
  Job_0.ID,
  Job_0.Title,
  Job_0.Level,
  Job_0.Active,
  Job_0.People_ID,
  Job_0.People_Name
FROM localized_fr_test_resources_migrate_Job AS Job_0
WHERE Job_0.Active = TRUE;",
  },
  {
    "parameters": [
      "cds_admin",
      "VIEW",
      "localized_fr_test_resources_migrate_ActiveJobs",
      "SELECT
  Job_0.ID,
  Job_0.Title,
  Job_0.Level,
  Job_0.Active,
  Job_0.People_ID,
  Job_0.People_Name
FROM localized_fr_test_resources_migrate_Job AS Job_0
WHERE Job_0.Active = TRUE;",
    ],
    "query": "INSERT INTO \`cds_admin\`.\`typeorm_metadata\`(\`database\`, \`schema\`, \`table\`, \`type\`, \`name\`, \`value\`) VALUES (DEFAULT, ?, DEFAULT, ?, ?, ?)",
  },
  {
    "parameters": undefined,
    "query": "CREATE VIEW \`localized_de_test_resources_migrate_Job\` AS SELECT
  L_0.ID,
  coalesce(localized_de_1.Title, L_0.Title) AS Title,
  L_0.Level,
  L_0.Active,
  L_0.People_ID,
  L_0.People_Name
FROM (test_resources_migrate_Job AS L_0 LEFT JOIN test_resources_migrate_Job_texts AS localized_de_1 ON localized_de_1.ID = L_0.ID AND localized_de_1.locale = 'de');",
  },
  {
    "parameters": [
      "cds_admin",
      "VIEW",
      "localized_de_test_resources_migrate_Job",
      "SELECT
  L_0.ID,
  coalesce(localized_de_1.Title, L_0.Title) AS Title,
  L_0.Level,
  L_0.Active,
  L_0.People_ID,
  L_0.People_Name
FROM (test_resources_migrate_Job AS L_0 LEFT JOIN test_resources_migrate_Job_texts AS localized_de_1 ON localized_de_1.ID = L_0.ID AND localized_de_1.locale = 'de');",
    ],
    "query": "INSERT INTO \`cds_admin\`.\`typeorm_metadata\`(\`database\`, \`schema\`, \`table\`, \`type\`, \`name\`, \`value\`) VALUES (DEFAULT, ?, DEFAULT, ?, ?, ?)",
  },
  {
    "parameters": undefined,
    "query": "CREATE VIEW \`localized_de_test_resources_migrate_ActiveJobs\` AS SELECT
  Job_0.ID,
  Job_0.Title,
  Job_0.Level,
  Job_0.Active,
  Job_0.People_ID,
  Job_0.People_Name
FROM localized_de_test_resources_migrate_Job AS Job_0
WHERE Job_0.Active = TRUE;",
  },
  {
    "parameters": [
      "cds_admin",
      "VIEW",
      "localized_de_test_resources_migrate_ActiveJobs",
      "SELECT
  Job_0.ID,
  Job_0.Title,
  Job_0.Level,
  Job_0.Active,
  Job_0.People_ID,
  Job_0.People_Name
FROM localized_de_test_resources_migrate_Job AS Job_0
WHERE Job_0.Active = TRUE;",
    ],
    "query": "INSERT INTO \`cds_admin\`.\`typeorm_metadata\`(\`database\`, \`schema\`, \`table\`, \`type\`, \`name\`, \`value\`) VALUES (DEFAULT, ?, DEFAULT, ?, ?, ?)",
  },
  {
    "parameters": undefined,
    "query": "CREATE VIEW \`localized_test_resources_migrate_Job\` AS SELECT
  L_0.ID,
  coalesce(localized_1.Title, L_0.Title) AS Title,
  L_0.Level,
  L_0.Active,
  L_0.People_ID,
  L_0.People_Name
FROM (test_resources_migrate_Job AS L_0 LEFT JOIN test_resources_migrate_Job_texts AS localized_1 ON localized_1.ID = L_0.ID AND localized_1.locale = 'en');",
  },
  {
    "parameters": [
      "cds_admin",
      "VIEW",
      "localized_test_resources_migrate_Job",
      "SELECT
  L_0.ID,
  coalesce(localized_1.Title, L_0.Title) AS Title,
  L_0.Level,
  L_0.Active,
  L_0.People_ID,
  L_0.People_Name
FROM (test_resources_migrate_Job AS L_0 LEFT JOIN test_resources_migrate_Job_texts AS localized_1 ON localized_1.ID = L_0.ID AND localized_1.locale = 'en');",
    ],
    "query": "INSERT INTO \`cds_admin\`.\`typeorm_metadata\`(\`database\`, \`schema\`, \`table\`, \`type\`, \`name\`, \`value\`) VALUES (DEFAULT, ?, DEFAULT, ?, ?, ?)",
  },
  {
    "parameters": undefined,
    "query": "CREATE VIEW \`localized_test_resources_migrate_ActiveJobs\` AS SELECT
  Job_0.ID,
  Job_0.Title,
  Job_0.Level,
  Job_0.Active,
  Job_0.People_ID,
  Job_0.People_Name
FROM localized_test_resources_migrate_Job AS Job_0
WHERE Job_0.Active = TRUE;",
  },
  {
    "parameters": [
      "cds_admin",
      "VIEW",
      "localized_test_resources_migrate_ActiveJobs",
      "SELECT
  Job_0.ID,
  Job_0.Title,
  Job_0.Level,
  Job_0.Active,
  Job_0.People_ID,
  Job_0.People_Name
FROM localized_test_resources_migrate_Job AS Job_0
WHERE Job_0.Active = TRUE;",
    ],
    "query": "INSERT INTO \`cds_admin\`.\`typeorm_metadata\`(\`database\`, \`schema\`, \`table\`, \`type\`, \`name\`, \`value\`) VALUES (DEFAULT, ?, DEFAULT, ?, ?, ?)",
  },
  {
    "parameters": undefined,
    "query": "CREATE VIEW \`localized_fr_test_resources_migrate_People\` AS SELECT
  L.ID,
  L.Name,
  L.Active
FROM test_resources_migrate_People AS L;",
  },
  {
    "parameters": [
      "cds_admin",
      "VIEW",
      "localized_fr_test_resources_migrate_People",
      "SELECT
  L.ID,
  L.Name,
  L.Active
FROM test_resources_migrate_People AS L;",
    ],
    "query": "INSERT INTO \`cds_admin\`.\`typeorm_metadata\`(\`database\`, \`schema\`, \`table\`, \`type\`, \`name\`, \`value\`) VALUES (DEFAULT, ?, DEFAULT, ?, ?, ?)",
  },
  {
    "parameters": undefined,
    "query": "CREATE VIEW \`localized_fr_test_resources_migrate_PeopleWithJob\` AS SELECT
  People_0.Name,
  People_0.Active,
  Job_1.Title,
  Job_1.Level,
  Job_1.Active AS JobActive
FROM (localized_fr_test_resources_migrate_People AS People_0 LEFT JOIN localized_fr_test_resources_migrate_Job AS Job_1 ON ((Job_1.People_ID = People_0.ID) AND (Job_1.People_Name = People_0.Name)));",
  },
  {
    "parameters": [
      "cds_admin",
      "VIEW",
      "localized_fr_test_resources_migrate_PeopleWithJob",
      "SELECT
  People_0.Name,
  People_0.Active,
  Job_1.Title,
  Job_1.Level,
  Job_1.Active AS JobActive
FROM (localized_fr_test_resources_migrate_People AS People_0 LEFT JOIN localized_fr_test_resources_migrate_Job AS Job_1 ON ((Job_1.People_ID = People_0.ID) AND (Job_1.People_Name = People_0.Name)));",
    ],
    "query": "INSERT INTO \`cds_admin\`.\`typeorm_metadata\`(\`database\`, \`schema\`, \`table\`, \`type\`, \`name\`, \`value\`) VALUES (DEFAULT, ?, DEFAULT, ?, ?, ?)",
  },
  {
    "parameters": undefined,
    "query": "CREATE VIEW \`localized_de_test_resources_migrate_People\` AS SELECT
  L.ID,
  L.Name,
  L.Active
FROM test_resources_migrate_People AS L;",
  },
  {
    "parameters": [
      "cds_admin",
      "VIEW",
      "localized_de_test_resources_migrate_People",
      "SELECT
  L.ID,
  L.Name,
  L.Active
FROM test_resources_migrate_People AS L;",
    ],
    "query": "INSERT INTO \`cds_admin\`.\`typeorm_metadata\`(\`database\`, \`schema\`, \`table\`, \`type\`, \`name\`, \`value\`) VALUES (DEFAULT, ?, DEFAULT, ?, ?, ?)",
  },
  {
    "parameters": undefined,
    "query": "CREATE VIEW \`localized_de_test_resources_migrate_PeopleWithJob\` AS SELECT
  People_0.Name,
  People_0.Active,
  Job_1.Title,
  Job_1.Level,
  Job_1.Active AS JobActive
FROM (localized_de_test_resources_migrate_People AS People_0 LEFT JOIN localized_de_test_resources_migrate_Job AS Job_1 ON ((Job_1.People_ID = People_0.ID) AND (Job_1.People_Name = People_0.Name)));",
  },
  {
    "parameters": [
      "cds_admin",
      "VIEW",
      "localized_de_test_resources_migrate_PeopleWithJob",
      "SELECT
  People_0.Name,
  People_0.Active,
  Job_1.Title,
  Job_1.Level,
  Job_1.Active AS JobActive
FROM (localized_de_test_resources_migrate_People AS People_0 LEFT JOIN localized_de_test_resources_migrate_Job AS Job_1 ON ((Job_1.People_ID = People_0.ID) AND (Job_1.People_Name = People_0.Name)));",
    ],
    "query": "INSERT INTO \`cds_admin\`.\`typeorm_metadata\`(\`database\`, \`schema\`, \`table\`, \`type\`, \`name\`, \`value\`) VALUES (DEFAULT, ?, DEFAULT, ?, ?, ?)",
  },
  {
    "parameters": undefined,
    "query": "CREATE VIEW \`localized_test_resources_migrate_People\` AS SELECT
  L.ID,
  L.Name,
  L.Active
FROM test_resources_migrate_People AS L;",
  },
  {
    "parameters": [
      "cds_admin",
      "VIEW",
      "localized_test_resources_migrate_People",
      "SELECT
  L.ID,
  L.Name,
  L.Active
FROM test_resources_migrate_People AS L;",
    ],
    "query": "INSERT INTO \`cds_admin\`.\`typeorm_metadata\`(\`database\`, \`schema\`, \`table\`, \`type\`, \`name\`, \`value\`) VALUES (DEFAULT, ?, DEFAULT, ?, ?, ?)",
  },
  {
    "parameters": undefined,
    "query": "CREATE VIEW \`localized_test_resources_migrate_PeopleWithJob\` AS SELECT
  People_0.Name,
  People_0.Active,
  Job_1.Title,
  Job_1.Level,
  Job_1.Active AS JobActive
FROM (localized_test_resources_migrate_People AS People_0 LEFT JOIN localized_test_resources_migrate_Job AS Job_1 ON ((Job_1.People_ID = People_0.ID) AND (Job_1.People_Name = People_0.Name)));",
  },
  {
    "parameters": [
      "cds_admin",
      "VIEW",
      "localized_test_resources_migrate_PeopleWithJob",
      "SELECT
  People_0.Name,
  People_0.Active,
  Job_1.Title,
  Job_1.Level,
  Job_1.Active AS JobActive
FROM (localized_test_resources_migrate_People AS People_0 LEFT JOIN localized_test_resources_migrate_Job AS Job_1 ON ((Job_1.People_ID = People_0.ID) AND (Job_1.People_Name = People_0.Name)));",
    ],
    "query": "INSERT INTO \`cds_admin\`.\`typeorm_metadata\`(\`database\`, \`schema\`, \`table\`, \`type\`, \`name\`, \`value\`) VALUES (DEFAULT, ?, DEFAULT, ?, ?, ?)",
  },
]
`;

exports[`TypeORM Test Suite should support migrate tables: 8->9 1`] = `[]`;

exports[`TypeORM Test Suite should support sha256 hash: hash length 1`] = `64`;

exports[`TypeORM Test Suite should support sha256 hash: hash value 1`] = `"28a01011d7022938a0a7ea81c32c4c76d1905e9f393efef7c90ccb24f1b227f4"`;
